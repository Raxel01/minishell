/********************************************************
    CHANGE FILE  (THIS FILE CAN SAVE YOU ONE DAY)       * 
/********************************************************
        * WE DON'T CARE ABOUT l2AKHTA2 l2IMLA2IYA*
                    ------------------    
                    |PARSING_CHANGES:|
/*************************************************************
I will change f single quotes logic to check for syntax-
error begin by line 67
file : tokenizer_sequel.c
STATUS  : ba9a lfikra tmma ^^^^^^

change in single quotes but still have chi blan 
*---> TRUE CHANGE :
    in true_case_quote function line : 114 add second condition
7itach I changed in logic selection of tokens so kay3tini wa7d 
token b state o type machi IN_SQUOT || IN_DQUOT return (new = NULL)
so token = NULL whada mablanch.

Currently :
    change on single quote fcts for norminette; test too;
*----> Status ^^^^^
    CHANGES ACCEPTED;
NEXT:
    change in Dquote for norminette;
*---> Status ^^^^
    Accepted kan wa7d lblan khfif f return mekhtalf bin mnin kanl9a chi ENV_VAR olla 
    mnin matatkonch
Begin : Today : 26 - 12:13
Goals : syntax error caused by all type of redirection
*-----> CHECKED <<<
    Add in line 45 of ysntax error but norminette error.
*----->
True changes : 
    reimplementation of redirection check case like :"ls >| wc -l";

NOW_ITS TIME FOR pipe syntaxe error :
PIPE:
	- left: [WSPACE] (STRING)
	- right: [WSPACE](STRING | REDIRECT)
fih Maydar :
        STOP :23:54;
    {
        creat pipe look for behind;
        forward THEN if some on o f them EQUAL null return (ERROR_EXIT)
        si non consulter autre condition;
    }
BEGIN : 13 : 06;
STOP : 22 : 43: Had nhar bedat madert fih ta9elwa ;
BEGIN after one day : 12 : 03 29/09:

==>|when I get status I should replace it by it's valu|
find error and handle it : echo "$" should be echo A_SPACE WORD
so I add && command[j + 1] != '\"';

I should handl cas of expansion should n't expand << "$PATH" || << $PATH 


****---------->
GOOD DAAAY. STOP : 20:15 begin -> 9:00 : 11H

TO do : 
circul in list if I find >| I remove '|';
reform the case likke : < infile cmd(WORD) option(word) '|(OPER)'
recheck ki kanlga cmd,
add syntaxe reformer the check the case >| : succes
file detection  cmd detection : succes;
/********** new mission :
echo implementation;
and exit;
/********************Begin : BUILT-IN***********************/
    /---->> OBJ : BUILT-IN COMMAND----\
cd : use function in test understand it;
11 / 10 : GOAL==> begin : 10:05 
    *finish cd;
    *exit;
    *unset;
    hard test to accept it;
/**/
/***************************************************************
/***************************************************************
                    |TO_CHECK MNBE3D|
                    -----------------
LEAK : if the variable don't exist in env ->I return duped("");
but chi blan tma;
ft_strndup don't alloc when to_dup = '\0';
GO TO SLEEP  00:00
/***************************************************************/
===================================================================================================================================================
                                                  == CHANGES LI DERT==
                                               == ============ ========= =======
/****> heyedt dup mn init_fd
FILE_NAME  : fd_generator;
cause : send bad fd;
/****> changes in epur string logic; 
in case of entring an empty line (ENTREE)
cause : kayn chi read and write in bad size (not enough)
/****> leak:
    -remove anything after finish with,
    -but f token w head the are relieed cause head_cmd dont alloc for state, type 
    -cause of that I get heap use after free
    -free cmd in epur string initial commande and replace it with the epured string;
    -then free final command in lexiacal anlysis after creating token;
    -free token and cmd_flager after creat cmd_table;
/*****> add unset
/*****>
Here doc implementation with expand var;
free the line getted from here_doc function because I have creat a linked list;
then creat an alloced new_line char free it after in the same while;
hada makan then free_here list cause I getted the line that I need.
============================================================LAST=======================================================
add status setter after pressing ctrl+c
change minishell prototype from : minishell(ac, av, env);
 /***>   to : minishell (env);

remove the struct command;
replace it by char *readedline;
the get_input_line change it prototype ;
it be without return and take double pointer;
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^LAST push changes^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
=======================================================================================================
